rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userID} {
    	allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.id;
      allow update: if request.auth != null && request.auth.uid == resource.data.id;
    }
    match /books/{bookID} {
      function bookData() {
      	return get(/databases/$(database)/documents/books/$(bookID)).data;
      }
      function readPermission (data) {
      	return request.auth != null && request.auth.uid in data.members;
      }
      function createPermission () {
      	return request.auth != null && request.auth.uid == request.resource.data.created_by;
      }
      function updatePermission () {
      	return request.auth != null &&
      		     request.auth.uid == resource.data.created_by &&
               request.auth.uid == request.resource.data.created_by;
      }
      allow read: if readPermission(resource.data);
      allow create: if createPermission();
      allow update, delete: if updatePermission();
      match /lines/{lineID} {
        allow read: if readPermission(bookData());
      	allow create: if createPermission();
      	allow update, delete: if updatePermission();
      }
    }
  }
}
